<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.irongteng.persistence.mapper.CategoryMapper">
    <!-- 
    <cache />
     -->
    <resultMap id="categoryResult" type="Category">
        <result property="id" jdbcType="INTEGER" column="ID"/>
        <result property="categoryName" jdbcType="VARCHAR" column="CategoryName"/>
        <result property="protocolID" jdbcType="INTEGER" column="ProtocolID"/>
        <result property="remark" jdbcType="VARCHAR" column="Remark"/>
        <result property="email" jdbcType="VARCHAR" column="Email"/>
        <result property="phone" jdbcType="VARCHAR" column="Phone"/>
        <result property="status" jdbcType="VARCHAR" column="Status"/>
        <result property="address" jdbcType="VARCHAR" column="Address"/>
        <result property="insertDate" jdbcType="TIMESTAMP" column="InsertDate"/>
        <result property="updateDate" jdbcType="TIMESTAMP" column="UpdateDate"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        ID,
        CategoryName,
        ProtocolID,
        Remark
    </sql>
    
    <select id="load" parameterType="Integer" resultMap="categoryResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM category 
        WHERE 
            ID = #{id} 
    </select>
    <!-- 查询所有的ID -->
    <select id="findAllIds" resultType="Integer">
        SELECT ID FROM category
    </select>
    
    <!-- 按Id删除 -->
    <delete id="delete" parameterType="Integer">
        DELETE FROM category WHERE ID = #{id} 
    </delete>
     <!-- 插入 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO category (
            ID,
            CategoryName,
            ProtocolID,
            Remark
        ) VALUES (
            #{id},
            #{categoryName},
            #{protocolID},
            #{remark}
        )
    </insert>
    
    <select id="countAll" resultType="Integer">
        SELECT count(ID) FROM category    
    </select>
    
    <select id="findAll" resultMap="categoryResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM category
    </select>
    
    <!-- 更新 -->
    <update id="updateSelective" parameterType="Category">
        UPDATE category 
        <set>
            <if test="categoryName!=null">
            CategoryName = #{categoryName},
            </if>
            <if test="protocolID!=null">
            ProtocolID = #{protocolID},
            </if>
            <if test="remark!=null">
            Remark = #{remark},
            </if>
        </set>
        WHERE 
            ID = #{id}
    </update>
    
    <update id="update" parameterType="Category">
        UPDATE category 
        SET
            CategoryName = #{categoryName},
            ProtocolID = #{protocolID},
            Remark = #{remark}
        WHERE 
            ID = #{id} 
    </update>
    
    <select id="findByCategoryName" parameterType="java.lang.String" resultMap="categoryResult" flushCache="true">
        select 
            <include refid="Base_Column_List" />
        from category where CategoryName = #{categoryName}
    </select>
    
    <select id="isUniqueCategoryName" parameterType="map" resultType="Integer">
        select count(0) as c from category where ID != #{id} and CategoryName = #{categoryName}
    </select>
    
    <select id="findByCondition" resultMap="categoryResult" parameterType="map">
        SELECT 
            <include refid="Base_Column_List" />
        from category 
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="protocolID != null">
                AND ProtocolID = #{protocolID}
            </if>
            <if test="keywords != null">
                AND (
                    CategoryName LIKE "%"#{keywords}"%"
                    or Remark LIKE "%"#{keywords}"%"
                )
            </if>
        </trim>
        <choose>
            <when test="orderField !=null and orderField !=''">
                 ORDER BY ${orderField} <if test="orderDirection != null and orderDirection != ''">${orderDirection}</if>
            </when>
            <otherwise>
                 order by ID
            </otherwise>
        </choose>
    </select>
    
    <select id="findPageBreakByCondition" resultMap="categoryResult" parameterType="map">
        SELECT 
            <include refid="Base_Column_List" />
        from category 
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="protocolID != null">
                AND ProtocolID = #{protocolID}
            </if>
            <if test="keywords != null">
                AND (
                    CategoryName LIKE "%"#{keywords}"%"
                    or Remark LIKE "%"#{keywords}"%"
                )
            </if>
        </trim>
        <choose>
            <when test="orderField !=null and orderField !=''">
                 ORDER BY ${orderField} <if test="orderDirection != null and orderDirection != ''">${orderDirection}</if>
            </when>
            <otherwise>
                 order by ID
            </otherwise>
        </choose>
    </select>
    
    <select id="findNumberByCondition" resultType="Integer" parameterType="map">
        select count(0) as c 
        from category
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="protocolID != null">
                AND ProtocolID = #{protocolID}
            </if>
            <if test="keywords != null">
                AND (
                    CategoryName LIKE "%"#{keywords}"%"
                    or Remark LIKE "%"#{keywords}"%"
                )
            </if>
        </trim>
    </select>
</mapper>

