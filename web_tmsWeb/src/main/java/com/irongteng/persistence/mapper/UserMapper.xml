<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.irongteng.persistence.mapper.UserMapper">
    <!-- 
    <cache />
     -->
    <resultMap id="userResult" type="User">
        <result property="id" jdbcType="INTEGER" column="ID"/>
        <result property="username" jdbcType="VARCHAR" column="Username"/>
        <result property="password" jdbcType="VARCHAR" column="Password"/>
        <result property="role" jdbcType="VARCHAR" column="Role"/>
        <result property="email" jdbcType="VARCHAR" column="Email"/>
        <result property="phone" jdbcType="VARCHAR" column="Phone"/>
        <result property="status" jdbcType="VARCHAR" column="Status"/>
        <result property="address" jdbcType="VARCHAR" column="Address"/>
        <result property="insertDate" jdbcType="TIMESTAMP" column="InsertDate"/>
        <result property="updateDate" jdbcType="TIMESTAMP" column="UpdateDate"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID,
        Username,
        Password,
        Role,
        Email,
        Phone,
        Status,
        InsertDate,
        UpdateDate
    </sql>
    <sql id="Security_Column_List">
        ID,
        Username,
        Role,
        Email,
        Phone,
        Status,
        InsertDate,
        UpdateDate
    </sql>
    <select id="load" parameterType="Integer" resultMap="userResult">
        SELECT 
            <include refid="Security_Column_List" />
        FROM user 
        WHERE 
            ID = #{id} 
    </select>
    <!-- 查询所有的ID -->
    <select id="findAllIds" resultType="Integer">
        SELECT ID FROM user
    </select>
    
    <!-- 按Id删除 -->
    <delete id="delete" parameterType="Integer">
        DELETE FROM user WHERE
        ID = #{id} 
    </delete>
     <!-- 插入 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (
            Username,
            Password,
            Role,
            Email,
            Phone,
            Address,
            Status,
            InsertDate,
            UpdateDate
        ) VALUES (
            #{username},
            #{password},
            #{role},
            #{email},
            #{phone},
            #{address},
            #{status},
            #{insertDate},
            #{updateDate}
        )
    </insert>
    
    <select id="countAll" resultType="Integer">
        SELECT count(ID) FROM user    
    </select>
    
    <select id="findAll" resultMap="userResult">
        SELECT 
            <include refid="Security_Column_List" />
        FROM user
    </select>
    
    <!-- 更新 -->
    <update id="updateSelective" parameterType="User">
        UPDATE user 
            <set>
                <if test="username!=null">
                Username = #{username},
                </if>
                <if test="password!=null">
                Password = #{password},
                </if>
                <if test="role!=null">
                Role = #{role},
                </if>
                <if test="email!=null">
                Email = #{email},
                </if>
                <if test="phone!=null">
                Phone = #{phone},
                </if>
                <if test="status!=null">
                Status = #{status},
                </if>
                <if test="insertDate!=null">
                InsertDate = #{insertDate},
                </if>
                <if test="updateDate!=null">
                UpdateDate = #{updateDate}
                </if>
            </set>
        WHERE 
            ID = #{id}
    </update>
    
    <update id="update" parameterType="User">
        UPDATE user SET
            Username = #{username},
            Password = #{password},
            Role = #{role},
            Email = #{email},
            Phone = #{phone},
            Status = #{status},
            InsertDate = #{insertDate},
            UpdateDate = #{updateDate}
        WHERE 
            ID = #{id} 
    </update>
    
    
    <update id="updateStatus" parameterType="map">
        UPDATE user SET
            Status = #{status},
            UpdateDate = #{updateDate}
        WHERE 
            ID = #{id} 
    </update>
    
    <select id="findByUsername" parameterType="java.lang.String" resultMap="userResult" flushCache="true">
        select 
            <include refid="Base_Column_List" />
        from user where USERNAME = #{username} and STATUS!='DELETED'
    </select>
    
    <select id="isUniqueUsername" parameterType="map" resultType="Integer">
        select count(0) as c
        from user where ID != #{id} and USERNAME = #{username} and STATUS!='DELETED'
    </select>
    
    <select id="findPageBreakByCondition" resultMap="userResult" parameterType="map">
        SELECT 
            <include refid="Security_Column_List" />
        from user 

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            username != 'admin'
            <choose>
            <when test="status != null">
                 AND STATUS=#{status}  
            </when>
            <otherwise>
                 AND STATUS!='DELETED'
            </otherwise>
            </choose>
            <if test="startDate != null">
                 AND InsertDate &gt;= #{startDate} 
            </if>
            <if test="endDate != null">
                 AND InsertDate &lt;= #{endDate} 
            </if>
            <if test="keywords != null">
                AND (
                    USERNAME LIKE "%"#{keywords}"%"
                    or EMAIL LIKE "%"#{keywords}"%"
                    or PHONE LIKE "%"#{keywords}"%"
                )
              </if>
          </trim>

        <choose>
            <when test="orderField !=null and orderField !=''">
                 ORDER BY ${orderField} <if test="orderDirection != null and orderDirection != ''">${orderDirection}</if>
            </when>
            <otherwise>
                 order by InsertDate DESC
            </otherwise>
        </choose>
           
    </select>
    <select id="findNumberByCondition" resultType="Integer" parameterType="map">
        select count(0) as c from user

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <choose>
                <when test="status != null">
                     AND Status=#{status}  
                </when>
                <otherwise>
                     AND Status!='DELETED'
                </otherwise>
            </choose>
            
            <if test="startDate != null">
                 AND InsertDate &gt;= #{startDate} 
            </if>
            <if test="endDate != null">
                 AND InsertDate &lt;= #{endDate} 
            </if>
            <if test="keywords != null">
                AND (
                    USERNAME LIKE "%"#{keywords}"%"
                    or EMAIL LIKE "%"#{keywords}"%"
                    or PHONE LIKE "%"#{keywords}"%"
                )
              </if>
          </trim>

    </select>
</mapper>

