<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.irongteng.persistence.mapper.OverallMapper">
    
    <cache />
    
    <resultMap id="overallResult" type="Overall">
        <id property="id" jdbcType="INTEGER" column="ID" />
        <result property="scanNum" jdbcType="INTEGER" column="ScanNum" />
        <result property="totalNum" jdbcType="INTEGER" column="TotalNum" />
        <result property="totalMacNum" jdbcType="INTEGER" column="TotalMacNum" />
        <result property="distinctMacNum" jdbcType="INTEGER" column="DistinctMacNum" />
        <result property="totalSsidNum" jdbcType="INTEGER" column="TotalSsidNum" />
        <result property="distinctSsidNum" jdbcType="INTEGER" column="DistinctSsidNum" />
        <result property="totalImeiNum" jdbcType="INTEGER" column="TotalImeiNum" />
        <result property="distinctImeiNum" jdbcType="INTEGER" column="DistinctImeiNum" />
        <result property="totalImsiNum" jdbcType="INTEGER" column="TotalImsiNum" />
        <result property="distinctImsiNum" jdbcType="INTEGER" column="DistinctImsiNum" />
        <result property="recordDate" jdbcType="TIMESTAMP" column="RecordDate" />
    </resultMap>
    
    <sql id="Base_Log_Column_List">
        ID, sum(ScanNum) as ScanNum, sum(TotalNum) as TotalNum, sum(DistinctMacNum) as DistinctMacNum, 
        sum(DistinctSsidNum) as DistinctSsidNum, sum(DistinctImeiNum) as DistinctImeiNum, sum(DistinctImsiNum) as DistinctImsiNum, RecordDate
    </sql>
    
    <sql id="Visit_Log_Column_List">
        ID, sum(times) as ScanNum, count(1) as TotalNum, count(distinct User_MAC) as DistinctMacNum, count(distinct AP_MAC) as DistinctSsidNum, 
        0 as DistinctImeiNum, 0 as DistinctImsiNum,date_format(StartTime,'%Y-%m-%d') as RecordDate
    </sql>
    
    <sql id="Hpl_Log_Column_List">
        ID, 0 as ScanNum, count(1) as TotalNum, 0 as DistinctMacNum, 0 as DistinctSsidNum, 
        count(distinct User_IMEI) as DistinctImeiNum, count(distinct User_IMSI) as DistinctImsiNum, date_format(recordTime,'%Y-%m-%d') as RecordDate
    </sql>
    
    <!-- 优化版本 -->
    <select id="find" parameterType="map" resultMap="overallResult">
        select 
            <include refid="Base_Log_Column_List" />
        from (
            select 
                <include refid="Hpl_Log_Column_List" />
            from hpl_log 
            where RecordTime &gt;= #{startDate} and RecordTime &lt;= #{endDate}
            group by day(recordTime)
            <if test="status == null or (status != null and status == 1)">
                union all
                select 
                    <include refid="Visit_Log_Column_List" />
                from visit_log  
                where StartTime &gt;= #{startDate} and StartTime &lt;= #{endDate}
                group by day(StartTime)
            </if>
        ) a
        group by RecordDate
        order by RecordDate
    </select>
    
    <select id="findOverall" parameterType="map" resultMap="overallResult">
        select 
            <include refid="Base_Log_Column_List" />
        from (
            select 
                <include refid="Hpl_Log_Column_List" />
            from hpl_log 
            where 
            <choose>
                <when test="type != null and type != 1">
                     date(RecordTime) &gt;= DATE_SUB(#{endDate}, INTERVAL 30 DAY) and date(RecordTime) &lt;= date(#{endDate})
                </when>
                <otherwise>
                     date(RecordTime) &gt;= DATE_SUB(#{endDate}, INTERVAL 1 WEEK) and date(RecordTime) &lt;= date(#{endDate})
                </otherwise>
            </choose>
            group by day(recordTime)
            <if test="status == null or (status != null and status == 1)">
                union all
                select 
                    <include refid="Visit_Log_Column_List" />
                from visit_log  
                where 
                <choose>
                    <when test="type != null and type != 1">
                         date(StartTime) &gt;= DATE_SUB(#{endDate}, INTERVAL 30 DAY) and date(StartTime) &lt;= date(#{endDate})
                    </when>
                    <otherwise>
                         date(StartTime) &gt;= DATE_SUB(#{endDate}, INTERVAL 1 WEEK) and date(StartTime) &lt;= date(#{endDate})
                    </otherwise>
                </choose>
                group by day(StartTime)
            </if>
        ) a
        group by RecordDate
        order by RecordDate
    </select>
    
</mapper>