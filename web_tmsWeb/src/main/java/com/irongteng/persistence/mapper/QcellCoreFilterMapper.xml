<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.irongteng.persistence.mapper.QcellCoreFilterMapper">

    <cache />
    
    <resultMap id="qcellCoreResult" type="QcellCoreFilter">
        <result property="id" jdbcType="INTEGER" column="ID"/>
        <result property="imei" jdbcType="VARCHAR" column="IMEI" />
        <result property="imsi" jdbcType="VARCHAR" column="IMSI" />
        <result property="name" jdbcType="VARCHAR" column="Name" />
        <result property="address" jdbcType="VARCHAR" column="ADDRESS" />
        <result property="recordTime" jdbcType="TIMESTAMP" column="RECORDTIME" />
        <result property="phone" jdbcType="VARCHAR" column="PHONE" />
    </resultMap>
    <sql id="Base_Column_List">
        ID,
        IMEI,
        IMSI,
        Name,
        Address,
        RecordTime,
        Phone
    </sql>
    <select id="load" parameterType="Integer" resultMap="qcellCoreResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM imsicall 
        WHERE 
            ID = #{id} 
    </select>
    <!-- 查询所有的ID -->
    <select id="findAllIds" resultType="Integer">
        SELECT ID FROM imsicall
    </select>
    
    <!-- 按Id删除 -->
    <delete id="delete" parameterType="Integer">
        DELETE FROM imsicall WHERE
        ID = #{id} 
    </delete>
    
    <!-- 插入 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO imsicall (
            IMEI,
            IMSI,
            NAME,
            ADDRESS,
            RECORDTIME,
            PHONE
        ) VALUES (
            #{imei},
            #{imsi},
            #{name},
            #{address},
            #{recordTime},
            #{phone}
        )
    </insert>
    
    <select id="countAll" resultType="Integer">
        SELECT count(ID) FROM imsicall    
    </select>
    
      <select id="findAll" resultMap="qcellCoreResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM imsicall
    </select>
    
    <select id="queryAll" resultMap="qcellCoreResult">
        SELECT ID, Name FROM imsicall
    </select>
    
        <!-- 更新 -->
    <update id="updateSelective" parameterType="QcellCoreFilter">
        UPDATE imsicall 
            <set>
                <if test="imei!=null">
                IMEI = #{imei},
                </if>
                <if test="imsi!=null">
                IMSI = #{imsi},
                </if>
                <if test="name!=null">
                Name = #{name},
                </if>
                <if test="address!=null">
                Address = #{address},
                </if>
                <if test="recordTime!=null">
                RecordTime = #{recordTime},
                </if>
                <if test="phone!=null">
                Phone = #{phone}
                </if>
            </set>
        WHERE 
            ID = #{id}
    </update>
    
    <select id="findByQcellCoreFiltername" parameterType="java.lang.String"
        resultMap="qcellCoreResult">
        select 
            <include refid="Base_Column_List" />
        from imsicall where Name = #{name}
    </select>
    
    <select id="isUniqueQcellCoreFiltername" parameterType="map" resultType="Integer">
        select count(0) as c
        from imsicall where ID != #{id} and Name = #{name}
    </select>
    
    <select id="findPageBreakByCondition" resultMap="qcellCoreResult" parameterType="map">
        SELECT 
            <include refid="Base_Column_List" />
        from imsicall 

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="keywords != null">
                AND (
                    Name LIKE "%"#{keywords}"%"
                    or IMEI LIKE "%"#{keywords}"%"
                    or IMSI LIKE "%"#{keywords}"%"
                )
            </if>
        </trim>
        
        <choose>
            <when test="orderField !=null and orderField !=''">
                 ORDER BY ${orderField} <if test="orderDirection != null and orderDirection != ''">${orderDirection}</if>
            </when>
            <otherwise>
                order by ID DESC
            </otherwise>
        </choose>
           
    </select>
    <select id="findNumberByCondition" resultType="Integer" parameterType="map">
        select count(0) as c from imsicall

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            
            <if test="keywords != null">
                AND (
                    Name LIKE "%"#{keywords}"%"
                    or IMEI LIKE "%"#{keywords}"%"
                    or IMSI LIKE "%"#{keywords}"%"
                )
            </if>
        </trim>

    </select>
</mapper>