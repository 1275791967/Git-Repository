<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.irongteng.persistence.mapper.MonitorAlarmMapper">
    
    <resultMap id="siteResult" type="Site">
        <result property="id" jdbcType="INTEGER" column="SiteID"/>
        <result property="siteName" jdbcType="VARCHAR" column="SiteName" />
        <result property="longitude" jdbcType="DOUBLE" column="Longitude" />
        <result property="latitude" jdbcType="DOUBLE" column="Latitude" />
        <result property="address" jdbcType="VARCHAR" column="Address" />
    </resultMap>
    <resultMap id="deviceResult" type="Device">
        <result property="id" jdbcType="INTEGER" column="DeviceID"/>
        <result property="deviceName" jdbcType="VARCHAR" column="DeviceName" />
        <result property="deviceNumber" jdbcType="VARCHAR" column="DeviceNumber" />
        <result property="attachNumber" jdbcType="VARCHAR" column="AttachNumber" />
        <result property="longitude" jdbcType="DOUBLE" column="Longitude" />
        <result property="latitude" jdbcType="DOUBLE" column="Latitude" />
        <result property="commCategory" jdbcType="INTEGER" column="CommCategory" />
        <result property="ipAddress" jdbcType="VARCHAR" column="IpAddress" />
        <result property="port" jdbcType="INTEGER" column="Port" />
        <result property="address" jdbcType="VARCHAR" column="Address" />
        <result property="status" jdbcType="INTEGER" column="Status" />
        <result property="remark" jdbcType="VARCHAR" column="Remark" />
        <association property="site" javaType="Site" column="SiteID" resultMap="siteResult" />
    </resultMap>
    
    <resultMap id="monitorResult" type="Monitor">
        <result property="id" jdbcType="INTEGER" column="MonitorID"/>
        <result property="name" jdbcType="VARCHAR" column="MonitorName" />
        <result property="mac" jdbcType="VARCHAR" column="MAC" />
        <result property="imei" jdbcType="VARCHAR" column="IMEI" />
        <result property="imsi" jdbcType="VARCHAR" column="IMSI" />
        <result property="remark" jdbcType="VARCHAR" column="Remark" />
    </resultMap>
    
    <resultMap id="monitorAlarmResult" type="MonitorAlarm">
        <id property="id" jdbcType="INTEGER" column="ID" />
        <result property="recordTime" jdbcType="TIMESTAMP" column="RecordTime" />
        <result property="confirmTime" jdbcType="TIMESTAMP" column="ConfirmTime" />
        <association property="device" javaType="Device" column="DeviceID" resultMap="deviceResult" />
        <association property="monitor" javaType="Monitor" column="MonitorID" resultMap="monitorResult" />   
    </resultMap>
    
    <sql id="Base_Column_List">
        ma.ID as ID, ma.DeviceID as DeviceID, ma.MonitorID as MonitorID, ma.RecordTime as RecordTime, ma.ConfirmTime,
            m.name as MonitorName, d.DeviceName, d.SiteID, s.SiteName
    </sql>
    <!-- 查询指定ID内容 -->
    <select id="load" parameterType="Integer" resultMap="monitorAlarmResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        WHERE 
            ma.ID = #{id} 
    </select>
    <!-- 查询所有的ID -->
    <select id="findAllIds" resultType="Integer">
        SELECT ID FROM monitoralarm
    </select>

    <!-- 按Id删除 -->
    <delete id="delete" parameterType="Integer">
        DELETE FROM monitoralarm WHERE
        ID = #{id} 
    </delete>
     <!-- 插入 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="MonitorAlarm">
        INSERT INTO monitoralarm (
            DeviceID,
            MonitorID,
            recordTime
        ) VALUES (
            #{device.id},
            #{monitor.id},
            #{recordTime}
        )
    </insert>
    
    <!-- 批量添加 -->
    <insert id="addBatch" parameterType="java.util.List" >
        INSERT INTO monitoralarm (DeviceID, MonitorID, RecordTime)
        values  
        <foreach item="item" index="index" collection="list" separator="," >
            (#{item.device.id}, #{item.monitor.id}, #{item.recordTime}) 
        </foreach>
    </insert>
    
    <select id="countAll" resultType="Integer">
        SELECT count(ID) FROM monitoralarm    
    </select>
    
    <select id="findAll" resultMap="monitorAlarmResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
    </select>
    <!-- 查询所有未确认告警 -->
    <select id="countAllAlarm" resultType="Integer">
        SELECT count(0) as c
        FROM monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        WHERE isnull(ma.ConfirmTime) is true
    </select>
    
    <!-- 查询所有未确认告警数目 -->
    <select id="findAllAlarm" resultMap="monitorAlarmResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        WHERE isnull(ma.ConfirmTime) is true
    </select>
    
    <!-- 查询所有未确认告警的设备ID -->
    <select id="findAllDeviceIDs" resultType="Integer">
        SELECT distinct ma.DeviceID
        FROM monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        WHERE isnull(ma.ConfirmTime) is true
    </select>
    <!-- 查询所有未确认告警的设备ID -->
    <select id="findAllSiteIDs" resultType="Integer">
        SELECT distinct d.SiteID
        FROM monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        WHERE isnull(ma.ConfirmTime) is true
    </select>
    <!-- 更新 -->
    <update id="updateSelective" parameterType="MonitorAlarm">
        UPDATE monitoralarm 
        <set>
            <if test="device!=null and device.id!=null">
            DeviceID = #{device.id},
            </if>
            <if test="monitor!=null and monitor.id!=null">
            MonitorID = #{monitor.id},
            </if>
            <if test="recordTime!=null">
            RecordTime = #{recordTime},
            </if>
            <if test="confirmTime!=null">
            ConfirmTime = #{confirmTime}
            </if>
        </set>
        WHERE 
            ID = #{id}
    </update>
    <!-- 更新 -->
    <update id="updateByDeviceID" parameterType="MonitorAlarm">
        UPDATE monitoralarm 
        <set>
            <if test="device!=null and device.id!=null">
            DeviceID = #{device.id},
            </if>
            <if test="monitor!=null and monitor.id!=null">
            MonitorID = #{monitor.id},
            </if>
            <if test="recordTime!=null">
            RecordTime = #{recordTime},
            </if>
            <if test="confirmTime!=null">
            ConfirmTime = #{confirmTime}
            </if>
        </set>
        WHERE 
            DeviceID = #{device.id}
    </update>
    <update id="update" parameterType="MonitorAlarm">
        UPDATE monitoralarm SET
            DeviceID = #{device.id},
            MonitorID = #{monitor.id},
            RecordTime = #{recordTime},
            ConfirmTime = #{confirmTime}
        WHERE 
            ID = #{id} 
    </update>
    
    <select id="findPageBreakByCondition" parameterType="map" resultMap="monitorAlarmResult">
        select 
            <include refid="Base_Column_List" />
        from monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="siteID != null">
                AND s.ID in (#{siteID})
            </if>
            <if test="deviceID != null">
                AND d.ID in (#{deviceID})
            </if>
            <if test="monitorID != null">
                AND m.ID in (#{monitorID})
            </if>
            <if test="status != null">
                AND s.ID in (#{status}) 
            </if>
            <if test="type != null">
                <choose>
                    <when test="type==1"><!-- 未确认告警 -->
                        AND  isnull(ma.ConfirmTime) is true
                    </when>
                    <otherwise><!-- 已确认告警 -->
                        AND  isnull(ma.ConfirmTime) is false
                    </otherwise>
                </choose>
            </if>
            <if test="startDate != null">
                AND ma.RecordTime &gt;= #{startDate} 
            </if>
            <if test="endDate != null">
                AND ma.RecordTime &lt;= #{endDate} 
            </if>
            <if test="keywords != null">
                AND (m.Name LIKE "%"#{keywords}"%"
                    or m.MAC LIKE "%"#{keywords}"%"
                    or m.IMEI LIKE "%"#{keywords}"%"
                    or m.IMSI LIKE "%"#{keywords}"%"
                )
            </if>
        </trim>
        <choose>
            <when test="orderField !=null and orderField !=''">
                 ORDER BY ${orderField} <if test="orderDirection != null and orderDirection != ''">${orderDirection}</if>
            </when>
            <otherwise>
                 order by ma.ID DESC
            </otherwise>
        </choose>
           
    </select>
    
    <select id="findNumberByCondition" resultType="Integer" parameterType="map">
        select count(ma.id) as c 
        from monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="siteID != null">
                AND s.ID in (#{siteID})
            </if>
            <if test="deviceID != null">
                AND d.ID in (#{deviceID})
            </if>
            <if test="monitorID != null">
                AND m.ID in (#{monitorID})
            </if>
            <if test="status != null">
                AND s.ID in (#{status}) 
            </if>
            <if test="type != null">
                <choose>
                    <when test="type==1"><!-- 未确认告警 -->
                        AND  isnull(ma.ConfirmTime) is true
                    </when>
                    <otherwise><!-- 已确认告警 -->
                        AND  isnull(ma.ConfirmTime) is false
                    </otherwise>
                </choose>
            </if>
            <if test="startDate != null">
                AND ma.RecordTime &gt;= #{startDate} 
            </if>
            <if test="endDate != null">
                AND ma.RecordTime &lt;= #{endDate} 
            </if>
            <if test="keywords != null">
                AND (m.Name LIKE "%"#{keywords}"%"
                    or m.MAC LIKE "%"#{keywords}"%"
                    or m.IMEI LIKE "%"#{keywords}"%"
                    or m.IMSI LIKE "%"#{keywords}"%"
                )
              </if>
          </trim>
    </select>
    
    <select id="searchByDeviceID" parameterType="Integer" resultMap="monitorAlarmResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        WHERE d.ID=#{deviceID} 
            and  isnull(ma.ConfirmTime) is true
    </select>
    
    <select id="searchBySiteID" parameterType="Integer" resultMap="monitorAlarmResult">
        SELECT 
            <include refid="Base_Column_List" />
        FROM monitoralarm ma 
            inner join monitor m on ma.MonitorID= m.id 
            inner join device d on ma.DeviceID=d.id
            inner join t_site s on s.ID=d.siteID
        WHERE s.ID=#{siteID} 
            and  isnull(ma.ConfirmTime) is true
    </select>
</mapper>